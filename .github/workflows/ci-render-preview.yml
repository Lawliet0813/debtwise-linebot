name: CI & Render Preview

on:
  push:
    branches:
      - 'feature/**'
      - 'chore/**'
      - 'fix/**'
      - 'hotfix/**'
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      RENDER_PREVIEW_HOOK: ${{ secrets.RENDER_PREVIEW_HOOK }}
      PREVIEW_URL: ${{ secrets.PREVIEW_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test
        env:
          LINE_CHANNEL_SECRET: dummy_32_chars_secret_aaaaaaaaaaaaaa
          LINE_CHANNEL_ACCESS_TOKEN: dummy_token_for_tests
          DEBUG_LOCAL: '1'

      - name: Build frontend bundle
        run: npm run build

      - name: Verify build output
        run: |
          test -f apps/bot/public/index.html
          echo "index.html located in apps/bot/public"

      - name: Trigger Render preview
        id: render_preview
        run: |
          if [ -z "$RENDER_PREVIEW_HOOK" ]; then
            echo "hook_status=skipped" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if curl --fail --silent --show-error -X POST "$RENDER_PREVIEW_HOOK" --output /dev/null; then
            echo "hook_status=triggered" >> "$GITHUB_OUTPUT"
          else
            echo "hook_status=failed" >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Render preview status comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          HOOK_STATUS: ${{ steps.render_preview.outputs.hook_status }}
          PREVIEW_URL: ${{ secrets.PREVIEW_URL }}
        with:
          script: |
            const marker = '<!-- render-preview -->';
            const hookStatus = process.env.HOOK_STATUS || 'skipped';
            const previewUrl = process.env.PREVIEW_URL || '';

            const statusMap = {
              triggered: '✅ Render Preview Deploy Hook 已觸發。',
              failed: '❌ Render Preview Deploy Hook 觸發失敗，請檢查 workflow logs。',
              skipped: '⚠️ 尚未設定 RENDER_PREVIEW_HOOK Secret，無法自動觸發預覽部署。'
            };

            const lines = [
              marker,
              '### Render Preview 狀態',
              statusMap[hookStatus] ?? statusMap.skipped,
              previewUrl
                ? `- 預覽網址：${previewUrl}`
                : '- 尚未設定 PREVIEW_URL Secret，如有固定預覽網址可補上。',
              '',
              '請驗證：',
              '- `GET /health` 應回傳 200',
              '- 首頁與主要 SPA 路由可由同一個 Node.js 服務正常載入'
            ];

            const body = lines.join('\n');

            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: context.payload.pull_request.number,
            });

            const existing = comments.find(comment => comment.body && comment.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.payload.pull_request.number,
                body,
              });
            }
